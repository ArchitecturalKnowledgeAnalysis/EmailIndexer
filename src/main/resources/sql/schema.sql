CREATE TABLE EMAIL (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    PARENT_ID BIGINT NULL DEFAULT NULL REFERENCES EMAIL(ID)
        ON UPDATE CASCADE ON DELETE SET NULL,
    MESSAGE_ID VARCHAR(255) UNIQUE,
    SUBJECT VARCHAR(1024),
    IN_REPLY_TO VARCHAR(255),
    SENT_FROM VARCHAR(255),
    DATE TIMESTAMP WITH TIME ZONE,
    BODY LONGTEXT,
    HIDDEN BOOL NOT NULL DEFAULT FALSE,
    CHECK (PARENT_ID IS NULL OR PARENT_ID <> ID)
);
CREATE INDEX IDX_EMAIL_DATE ON EMAIL(DATE);
CREATE INDEX IDX_EMAIL_HIDDEN ON EMAIL(HIDDEN);

CREATE TABLE TAG (
    ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(255) UNIQUE,
    DESCRIPTION MEDIUMTEXT
);

CREATE TABLE EMAIL_TAG (
    EMAIL_ID BIGINT NOT NULL REFERENCES EMAIL(ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    TAG_ID INTEGER NOT NULL REFERENCES TAG(ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY (EMAIL_ID, TAG_ID)
);

/* Utility tables to record all changes made to the dataset. Each mutation should affect one or more emails. */
CREATE TABLE MUTATION (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    DESCRIPTION LONGTEXT NOT NULL,
    PERFORMED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP(0),
    AFFECTED_EMAIL_COUNT BIGINT NOT NULL DEFAULT 0
);
CREATE INDEX IDX_MUTATION_DATE ON MUTATION(PERFORMED_AT);

CREATE TABLE MUTATION_EMAIL (
    MUTATION_ID BIGINT NOT NULL REFERENCES MUTATION (ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    EMAIL_ID BIGINT NOT NULL REFERENCES EMAIL(ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY (MUTATION_ID, EMAIL_ID)
);