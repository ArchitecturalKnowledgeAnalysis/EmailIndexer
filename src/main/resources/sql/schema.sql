CREATE TABLE EMAIL (
    ID INTEGER PRIMARY KEY,
    PARENT_ID INTEGER NULL DEFAULT NULL REFERENCES EMAIL(ID)
        ON UPDATE CASCADE ON DELETE SET NULL,
    MESSAGE_ID TEXT NOT NULL UNIQUE,
    SUBJECT TEXT NOT NULL,
    IN_REPLY_TO TEXT NULL,
    SENT_FROM TEXT NOT NULL,
    DATE INTEGER NOT NULL,
    BODY TEXT NOT NULL,
    HIDDEN BOOLEAN NOT NULL DEFAULT FALSE,
    CHECK (PARENT_ID IS NULL OR PARENT_ID <> ID)
);
CREATE INDEX IDX_EMAIL_PARENT ON EMAIL(PARENT_ID);
CREATE INDEX IDX_EMAIL_DATE ON EMAIL(DATE);
CREATE INDEX IDX_EMAIL_HIDDEN ON EMAIL(HIDDEN);

CREATE TABLE EMAIL_NOTE (
    ID INTEGER PRIMARY KEY,
    EMAIL_ID INTEGER NOT NULL REFERENCES EMAIL(ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CREATED_AT INTEGER NOT NULL,
    MESSAGE TEXT NOT NULL
);
CREATE INDEX IDX_EMAIL_NOTE_EMAIL ON EMAIL_NOTE(EMAIL_ID);
CREATE INDEX IDX_EMAIL_NOTE_CREATED_AT ON EMAIL_NOTE(CREATED_AT);

CREATE TABLE TAG_GROUP (
    ID INTEGER PRIMARY KEY,
    PARENT_ID INTEGER NULL DEFAULT NULL REFERENCES TAG_GROUP(ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    NAME TEXT NOT NULL UNIQUE,
    DESCRIPTION TEXT NULL DEFAULT NULL,
    SEQ INTEGER NOT NULL DEFAULT 0
);
CREATE INDEX IDX_TAG_GROUP_PARENT ON TAG_GROUP(PARENT_ID);
CREATE INDEX IDX_TAG_GROUP_NAME ON TAG_GROUP(NAME);
CREATE INDEX IDX_TAG_GROUP_SEQ ON TAG_GROUP(SEQ);

CREATE TABLE TAG (
    ID INTEGER PRIMARY KEY,
    NAME TEXT NOT NULL UNIQUE,
    DESCRIPTION TEXT NULL DEFAULT NULL,
    SEQ INTEGER NOT NULL DEFAULT 0
);
CREATE INDEX IDX_TAG_NAME ON TAG(NAME);
CREATE INDEX IDX_TAG_SEQ ON TAG(SEQ);

CREATE TABLE TAG_GROUP_TAGS (
    GROUP_ID INTEGER NOT NULL REFERENCES TAG_GROUP(ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    TAG_ID INTEGER NOT NULL REFERENCES TAG(ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY (GROUP_ID, TAG_ID)
);

CREATE TABLE EMAIL_TAG (
    EMAIL_ID INTEGER NOT NULL REFERENCES EMAIL(ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    TAG_ID INTEGER NOT NULL REFERENCES TAG(ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY (EMAIL_ID, TAG_ID)
);

/* Utility tables to record all changes made to the dataset. Each mutation should affect one or more emails. */
CREATE TABLE MUTATION (
    ID INTEGER PRIMARY KEY,
    DESCRIPTION TEXT NOT NULL,
    PERFORMED_AT INTEGER NOT NULL,
    AFFECTED_EMAIL_COUNT INTEGER NOT NULL DEFAULT 0
);
CREATE INDEX IDX_MUTATION_DATE ON MUTATION(PERFORMED_AT);

CREATE TABLE MUTATION_EMAIL (
    MUTATION_ID INTEGER NOT NULL REFERENCES MUTATION (ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    EMAIL_ID INTEGER NOT NULL REFERENCES EMAIL(ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY (MUTATION_ID, EMAIL_ID)
);